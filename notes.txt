
DERS 1: Angular nedir?? 


Angular::> Web uygulama mimarisidir. SPA(Single page application) , yuksek performansli cunku tek sayfadan yuklenerek calisir.

NG Terminal Commands: 

--ng version : Kullanilan angular versiyonu 
--ng new : sade bir sablonda  yeni bir angular uygulamasi oluşturur.
--ng generate : yapi taslarinin uretilmesini saglar.
--ng serve : Angular uygulamasinin ayaga kalrilmasinin saglar.
--ng serve -- port 1111 : uygulamayi default port 4200 degilde 1111 protundan calistirmak icin kullanilir.
--ng build : angular uygulamasinin build edilmesini sagler.



NG Mimarisi >>>>

    --node_modules :: node pakatlerini tutan klasor
    --src :: uygulamanin en oonemli klasoru 
            -/app
                *app-routing.module.ts :: sayfalar arasindaki baglanti routlarini tutan dosya.
                *app.component.html :: uygulamanin ana componentidir. 
                *app.component.ts :: codeladigimiz dosya C#'taki controller.
                *app.module.ts :: Uygulamanin ana module'udur. 
            -asset :: uygulama icinde resim icon vs bunun icinde bulunur.
            -index.html :: kullanilan ana html single page.
            -main.ts :: c#'taki program.cs
    --package-lock.json :: uygulamada kullanilan paketlerin versionlarinin takip edildigi dosya.
    --angular.json :: Uygulamayla ilgili script, stylei budgets gibi temel configleri iceren dosya. 
    --editor.config :: Editor ayarlarini iceren dosyamiz

 ================================================================================================================================
 
 DERS 2: Angular Mimarisinin yapisi nasildir??

 Modules : Uygulamanin cesitli parcalarini bir araya getirerek butun olarak kullanimini saglar.

            -Dep. inj. ile birbileri arasindan bagimliliklari test edilebilir. 

 Componentker : HTML ve TS dosyalarindan olusurlar. component uygulamanin butun islemsel yapilarini ifade ederler. 
            -orn, product page'i bir sayfadir ve fıtrati componenttir.
            - Data binding ozelligi sayesinde ts ve html uzerindeki veriler birbirinebaglanir.
            - ihtiyac duyduklarini servis instancelari dep. Inj. ile dahil edilebilir. 


        Data Binding :: Angularda Databinding two way data binding olarak calisir. Yani hem html'den hem de TS'ten birbirini degistirebilir.

        Dependency Injection :: Angular mimarisi uygulamada mevcut  olan bagimliliklari yoneyebilmek icin dependency injection patern kullanmaktadir.

        Directives :: HTML nesnelerinin davranislarini gorunumlarini yonetebilmemizi saglatan ozel etiketlerdir. 
                      Uygulamayi dinamik ve etkilisimli hale getirirler.

        Decorators :: TS ozelligidir. İslevsel olarak componentin nasil bir yapiya sahip oldugunu belirtir.

        Services :: Angular'da genellikle dis servislerle (API endpoint) iletisim kurmak, karmasik is operastonalrini veya business logic'i yurutmek yahut componentler arasinda iletisim saglayabilmek icin kullanilan fiili yapilanmalardir.
                     Tum operasyonal yani fili kodlama gerektiren islemler servislerda yapilmaktadir.

        Template :: Componentlarin HMTL kısımlaridir. HTML kodlari barindirabilecegi gibi ozel Angular elemanlari da baridirabiliriler.

        Guards :: Route erisimlerinin izin kontrolleri guard yapilanmasi uzerinden gerceklestirilmektekdir. 
                  Sayfalar arasi gecis sureclerinde ilgili kullacinin erisimine izin verilip verilmedigi kontrol eden sistemlerdir. 

        Pipelar :: verilerin goruntuenme sureclerinde islenmesine islecsellk saglayan yapilardrç