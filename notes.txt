
DERS 1: Angular nedir?? 


Angular::> Web uygulama mimarisidir. SPA(Single page application) , yuksek performansli cunku tek sayfadan yuklenerek calisir.

NG Terminal Commands: 

--ng version : Kullanilan angular versiyonu 
--ng new : sade bir sablonda  yeni bir angular uygulamasi oluşturur.
--ng generate : yapi taslarinin uretilmesini saglar.
--ng generate/g component/c "componentName" : yeni komponenetolusturmak icin kullanilir.
--ng generate/g directive/d "directiveName" : directive olusturma talimati
--ng generate/g directive/d "directives/directiveName" : klasor altinda directive olusturma talimati

--ng serve : Angular uygulamasinin ayaga kalrilmasinin saglar.
--ng serve -- port 1111 : uygulamayi default port 4200 degilde 1111 protundan calistirmak icin kullanilir.
--ng build : angular uygulamasinin build edilmesini sagler.




NG Mimarisi >>>>

    --node_modules :: node pakatlerini tutan klasor
    --src :: uygulamanin en oonemli klasoru 
            -/app
                *app-routing.module.ts :: sayfalar arasindaki baglanti routlarini tutan dosya.
                *app.component.html :: uygulamanin ana componentidir. 
                *app.component.ts :: codeladigimiz dosya C#'taki controller.
                *app.module.ts :: Uygulamanin ana module'udur. 
            -asset :: uygulama icinde resim icon vs bunun icinde bulunur.
            -index.html :: kullanilan ana html single page.
            -main.ts :: c#'taki program.cs
    --package-lock.json :: uygulamada kullanilan paketlerin versionlarinin takip edildigi dosya.
    --angular.json :: Uygulamayla ilgili script, stylei budgets gibi temel configleri iceren dosya. 
    --editor.config :: Editor ayarlarini iceren dosyamiz

 ================================================================================================================================
 
 DERS 2: Angular Mimarisinin yapisi nasildir??

 Modules : Uygulamanin cesitli parcalarini bir araya getirerek butun olarak kullanimini saglar.

            -Dep. inj. ile birbileri arasindan bagimliliklari test edilebilir. 

 Componentker : HTML ve TS dosyalarindan olusurlar. component uygulamanin butun islemsel yapilarini ifade ederler. 
            -orn, product page'i bir sayfadir ve fıtrati componenttir.
            - Data binding ozelligi sayesinde ts ve html uzerindeki veriler birbirinebaglanir.
            - ihtiyac duyduklarini servis instancelari dep. Inj. ile dahil edilebilir. 


        Data Binding :: Angularda Databinding two way data binding olarak calisir. Yani hem html'den hem de TS'ten birbirini degistirebilir.

        Dependency Injection :: Angular mimarisi uygulamada mevcut  olan bagimliliklari yoneyebilmek icin dependency injection patern kullanmaktadir.

        Directives :: HTML nesnelerinin davranislarini gorunumlarini yonetebilmemizi saglatan ozel etiketlerdir. 
                      Uygulamayi dinamik ve etkilisimli hale getirirler.

        Decorators :: TS ozelligidir. İslevsel olarak componentin nasil bir yapiya sahip oldugunu belirtir.

        Services :: Angular'da genellikle dis servislerle (API endpoint) iletisim kurmak, karmasik is operastonalrini veya business logic'i yurutmek yahut componentler arasinda iletisim saglayabilmek icin kullanilan fiili yapilanmalardir.
                     Tum operasyonal yani fili kodlama gerektiren islemler servislerda yapilmaktadir.

        Template :: Componentlarin HMTL kısımlaridir. HTML kodlari barindirabilecegi gibi ozel Angular elemanlari da baridirabiliriler.

        Guards :: Route erisimlerinin izin kontrolleri guard yapilanmasi uzerinden gerceklestirilmektekdir. 
                  Sayfalar arasi gecis sureclerinde ilgili kullacinin erisimine izin verilip verilmedigi kontrol eden sistemlerdir. 

        Pipelar :: verilerin goruntuenme sureclerinde islenmesine islecsellk saglayan yapilardir.

 1

   --Componentler sayfalari olusturmamizi saglayan yapilardir. App klasoru icinde tutulur. 
   --Angular uygulamasinda olusan ilk component baslangic komponenti olarak degerlendirilir. 
   --bootstrap: [AppComponent] //burada tanimlanan component uygulamanin ana component oldugunu belirtir.

   Components :: * Sayfa altyapilaridir. Bunun disinda sayfa olarak kullanillan componentlerin alt componentleri olarak da kullanilabilmektedir. 
                 * Sayfa zaten bir componenet bu sayfdanin alt componentleri yani alt elemanlari da olabilmektdir. 
                 * Her component birbirinden bagimsiz calisabilmektedir. 
                 * BOL PARCALA YONET. 

    :: {coded notes} ::
        selector: 'app-root',//html'de cagirilirken kullanilacak tag title.. Uygulamanin herhangi bir yarinden nasil cagiralacagini bildiren kisimdir. 
        // templateUrl: './app.component.html', //Componentin gorsel calismarilinin yaoildigi parcadir -- icerisinde html esliginde directive pipe gibi angular ozelliklerini calistirebilecek yaoidadir. 
        template: '<p>Merhaba</p>, {{title}}',
        //componentin asil parcasidir. API gibi dis servislere atilan istekler de bu claslar uzerinden yapilir. 
        HomeComponent //olusturulan componentin kullanilabilmesi icin ana modulde, declaration kısmında belirtilmesi gerekir. 
    :: {coded notes} ::
    
    Metadata Decarator :: componentin nasıl ypılandirılacagi ve nasıl kullanilacagini tanimlayan birdecaratordir. Bu decoratorler selector, style ce templatedısında animations inputs ve output gibi fieldlarla de modifiye edilebilir. 


    !!!OLUSTURULAN COMPONENTİN UYGULAMADA KULLANILABILMESI ICIN ANA MODULE DECLARE EDILMESI GEREKMEKTEDIR. YUKARIDA ILGILI NOTTAN TAKIP ET.!!!


================================================================================================================================

DERS 4: DATA BINDING 

    Binding nedir: component bir modelin veya fonksiyonun tamplatedeki bir alan ya da DOM nesnesi ile canli olarak baglanti kuran nesne. 
     
     -- Text interpolation : HTML kisminda dield property degerinin yazdirilmasi islemeni {{name}}
                             Name uzerindeki degisiklikler anlik olarak html'e aktarilacaktir.
     
     -- Property Binding : Template icindeki nesneleri veya directiveler icin Component Class'inda tanimli olan verilerin property olarak direkt baglanmasina saglayan yontemdir. [value] = "value"
                            Bu yontem sayesinde deger atamalari dah adinamik bir sekilde gerceklestirilmis olmaktadir. 
     
     -- Event Binding : Template icerisindeki herhangi bir DOM nesnesinin Component Class`i icinde tanimli olan bir fonksitona even olarak baglanir
                        Eventlere (ONCLICK CLICK VS) ts dosyasi uzerinden fonksiyon baglama islemidir.
                        herhangi bir keyword.shift.a gibi islemleride eventlere ts methoduna baglayabilirsin


     -- Two way binding : Template icindeki field propertynin anlik olarak hem view hemde controller uzerinden degistrilebilmesi islemidir.
                        [(ngModule)] kullanilabilmesi icin FormsModelu'n uygulamanin ana modulunde import edilmesi gerekmektedir.
                        ngModelChange event'i ile bir olayi tetikleyebilir ve boylece girilen bilgilerin de dogrulamasi icin calisma gerceklestirebilirsiniz.
     
     -- Attribute binding : HTML nesnesinin degerine component classinden veri gonderilmesini saglayan sistemdir.
     
     -- Class Binding : 
     
     -- Style Binding : 

    Chenge Detection algoritmasi == bu algoritma sayesinde veri degisikligi;nde component ve templet'n senkronize calismasina saglar.



================================================================================================================================

DERS 5: Interpolation Syntax Nedir??

{{...}} ?? Angularda component classi icindeki gerganhi bir field yahut propertinin HTML uzerinde goruntulenebilmesini saglayan operatordur

           Bu operatorumuz one-way data binding gerceklestirir.

           Neler Kullanilamaz!! == uygulamada sadece temp;late uzerinde gerekli bilgileri okumak icin kullanilir. property ve fieldlarin degerlerini degistirecek operatorler kullannilamaz
                                   new, typeodf, instanceof vs. keywordleri kullanilamaz!
                                   ; operatoru kullanilamaz.
                                   (++, --) operatorleri kullanilamaz.
                                   bitwise operatorleri kullanilamaz. 
        
            Interpolation operatorunde html ve script degiskenleri berilmeye calisilirsa bunlar string olarak sayfaya yansitilir.

            interpolation <p ngNonBindable > {{text}} dunya <\p> ngNonBindable operatoru kullnilarak interpolatin pasiflestirilerek string olarak gosterilir.


            Neler Kullanilir <3 == pipes, Nullable Operatoru `{{person?.name}}`, Non-Null Assertion operatoru `{{person!.name}}`.


================================================================================================================================

DERS 6: Directives nedir? Ne amacla kullanilmaktadir?

    HTML elemanlarin ekstra ozellikler ve davranislar eklemek icin kullanilan ozel etiketlerdir.

    Directive Nasil Kullanilir?
        HTML elemanina directive'in sellectorunu eklemek yeterlidir.
        Bildirilen directive ne is yapiyorsa bunu otomatik olarak DOM elemenina verek bu ozellikleri elemente kazandirabiliriz.

    Built-in Directives;
        
        *ngFor: HTML nesneleri uzerinde iterastonel islemler yapmak icin kullanilir. (*) structural directive
                keywords; index (), first, last, even, odd.
                
        ngIf: Verilan kosula gore HTML nesnelerinin gorunurlugunu koontrol etmek icin kullanilan temel bir Angular directive'i dir


        [ngSwitch]: verilen kosula gore HTML nesnelerinin gorunurlugunu yahut icerigini degistirmek icin kullanilan temel bir directive'dir. [] Custom bir  directivedir.


        ngClass: vermek istedigim classi aktarabildigim direktilve
        ngStyle: vermek istedigim stylei aktardigim directive


        ngModel
        ngNonBindable

================================================================================================================================

DERS 6: Custom Directive Nasil Olusturulur??

directive olusturma : --ng generate/g directive/d "directiveName" ; islem tamamlandiktan sonra ng CLI'yi yaptigi islemleri terminalde yazidirir.

    //example directive ve app component dosyalari uzerine ilgili notlar alindi